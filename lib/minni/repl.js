// Generated by CoffeeScript 1.3.1
(function() {
  var Minni, autocomplete, clear_screen, inspect, readline, repl, run, set_prompt, stdin, stdout, todoList;

  readline = require('readline');

  inspect = require('util').inspect;

  stdin = process.openStdin();

  stdout = process.stdout;

  Minni = require('./minni');

  todoList = new Minni("" + (process.cwd()) + "/.minni");

  set_prompt = function() {
    var colored_name, length, name, prompt;
    name = todoList.get_name();
    length = ("minni (" + name + ")> ").length;
    colored_name = name.yellow.bold;
    prompt = "minni (" + colored_name + ")> ";
    return repl.setPrompt("minni (" + colored_name + ")> ", length);
  };

  clear_screen = function() {
    stdout.write('\u001B[2J\u001B[0;0f');
    set_prompt();
    return repl.prompt();
  };

  process.on('uncaughtException', function(e) {
    console.log(e, e.stack);
    return repl.prompt();
  });

  autocomplete = function(text) {
    return [[], text];
  };

  run = function(buffer) {
    var result;
    buffer = buffer.replace(/[\r\n]+$/, "");
    if (!buffer.toString().trim()) {
      repl.prompt();
      return;
    }
    if (buffer === 'quit') {
      repl.close();
      return;
    }
    result = todoList.process_command(buffer);
    set_prompt();
    repl.output.write(result);
    return repl.prompt();
  };

  if (readline.createInterface.length < 3) {
    repl = readline.createInterface(stdin, autocomplete);
    stdin.on('data', function(buffer) {
      return repl.write(buffer);
    });
  } else {
    repl = readline.createInterface(stdin, stdout, autocomplete);
  }

  repl.on('close', function() {
    repl.output.write('\n');
    repl.output.write('Bye, have a nice day!\n'.green);
    return repl.input.destroy();
  });

  repl.on('line', run);

  set_prompt();

  repl.prompt();

}).call(this);
