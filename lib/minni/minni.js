// Generated by CoffeeScript 1.3.1
(function() {
  var List, Todo, fs,
    __slice = [].slice;

  fs = require('fs');

  List = require('./list');

  exports.VERSION = '0.0.1';

  Todo = Todo = (function() {

    Todo.name = 'Todo';

    function Todo(file) {
      this.file = file;
      this.load();
    }

    Todo.prototype.load = function() {
      var done, items, lines, _ref;
      lines = fs.readFileSync(this.file, 'utf8');
      _ref = lines.split(Todo.separotor), this.name = _ref[0], items = _ref[1], done = _ref[2];
      this.name = this.name.replace(/[\r\n]+$/, '');
      this.items = new List(items.split('\n'));
      return this.done = new List(done.split('\n'));
    };

    Todo.prototype.save = function() {
      return fs.writeFileSync(this.file, this.get_content(), 'utf8');
    };

    Todo.prototype.get_name = function() {
      return this.name;
    };

    Todo.prototype.get_content = function() {
      return "" + this.name + "\n" + Todo.separotor + "\n" + this.items + "\n" + Todo.separotor + "\n" + this.done;
    };

    Todo.prototype.process_command = function(buffer) {
      var action, args, result, _ref;
      _ref = buffer.split(" "), action = _ref[0], args = 2 <= _ref.length ? __slice.call(_ref, 1) : [];
      args = args.join(" ");
      result = (function() {
        switch (action) {
          case "help":
            return Todo.help;
          case "add":
          case "a":
            return this.add_item(args);
          case "remove":
          case "r":
            return this.remove_item(args);
          case "list":
          case "l":
            return this.list_items();
          case "listall":
          case "la":
            return this.list_all_items();
          case "rename":
            return this.rename(args);
        }
      }).call(this);
      return this.send_response(result);
    };

    Todo.prototype.remove_item = function(index) {
      return this.items.remove(index);
    };

    Todo.prototype.add_item = function(item_name) {
      return this.items.add(item_name);
    };

    Todo.prototype.list_all_items = function() {
      var result;
      result = this.list_items();
      result += this.done.toString();
      return result;
    };

    Todo.prototype.list_items = function() {
      return this.items.toString();
    };

    Todo.prototype.rename = function(new_name) {
      var old;
      old = this.name;
      this.name = new_name;
      this.save();
      return "'" + old + "' has been renamed to '" + this.name + "'";
    };

    Todo.prototype.send_response = function() {
      var text;
      text = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      text = text.join(' ');
      if (text.slice(-1) !== '\n') {
        return text + '\n';
      }
      return text;
    };

    return Todo;

  })();

  module.exports = Todo;

  Todo.separotor = '================================================================================';

  Todo.help = "\nMinni - Minimalistic Command Line Todo List\nUsage:\n  help, h\n      Displays this help content\n  add, a\n      Add a task to the list\n  remane, r\n      Renames the list\n  list, l\n      Displays all tasks\n\n";

}).call(this);
